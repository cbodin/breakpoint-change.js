/*! breakpoint-change.js v1.0.1 | https://github.com/cbodin/breakpoint-change.js#readme */
function BreakpointChange(e,t){var a=t||".breakpoint",n=a.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&");this.window=e,this.document=e.document,this.selectorRegex=new RegExp("^"+n+" (#|.)([a-z0-9-_]+)$","i"),this.onMediaChangeListener=this.matchMedia.bind(this),this.onInitTriggerListener=this.init.bind(this),this.addedReadyListener=!1,this.addedLoadListener=!1,this.callbacks=[],this.enterCallbacks={},this.leaveCallbacks={},this.breakpoints=[],this.defaultBreakpoint=void 0,this.currentBreakpoint=void 0}BreakpointChange.prototype.on=function(e){this.objectKeyArrayAdd(this,"callbacks",e)},BreakpointChange.prototype.onEnter=function(e,t){this.objectKeyArrayAdd(this.enterCallbacks,e,t)},BreakpointChange.prototype.onLeave=function(e,t){this.objectKeyArrayAdd(this.leaveCallbacks,e,t)},BreakpointChange.prototype.off=function(e){this.objectKeyArrayRemove(this,"callbacks",e)},BreakpointChange.prototype.offEnter=function(e,t){this.objectKeyArrayRemove(this.enterCallbacks,e,t)},BreakpointChange.prototype.offLeave=function(e,t){this.objectKeyArrayRemove(this.leaveCallbacks,e,t)},BreakpointChange.prototype.init=function(){if(!this.setup()){var e=this.document.readyState;"loading"!=e||this.addedReadyListener?"interactive"!=e||this.addedLoadListener||(this.window.addEventListener("load",this.onInitTriggerListener),this.addedLoadListener=!0):(this.document.addEventListener("DOMContentLoaded",this.onInitTriggerListener),this.addedReadyListener=!0)}},BreakpointChange.prototype.getBreakpoint=function(){return this.currentBreakpoint},BreakpointChange.prototype.setup=function(){if(this.breakpoints.length>0)return!0;var e=this.getBreakpoints();return e.length>0&&(this.breakpoints=e,this.breakpoints.forEach(function(e){e.isDefault&&(this.defaultBreakpoint=e.name),e.mql.addListener(this.onMediaChangeListener)},this),this.matchMedia(),!0)},BreakpointChange.prototype.getBreakpoints=function(){for(var e=this.document.styleSheets,t=[],a=0;a<e.length;a++)for(var n=e[a].cssRules||[],i=0;i<n.length;i++){var r=n[i];if(4==r.type){var o=this.findBreakpoint(r.cssRules);if(o){var s=this.window.matchMedia(r.media.mediaText);t.push({name:o.name,mql:s,isDefault:o.isDefault})}}}return t},BreakpointChange.prototype.findBreakpoint=function(e){for(var t,a=e||[],n=0;n<a.length;n++)if(1==a[n].type){var i=a[n].selectorText.match(this.selectorRegex);i&&(t={isDefault:"#"==i[1],name:i[2]})}return t},BreakpointChange.prototype.matchMedia=function(){var e,t=this.currentBreakpoint||this.defaultBreakpoint;this.breakpoints.forEach(function(t){t.mql.matches&&(e=t)}),e&&e.name!=t&&(this.currentBreakpoint=e.name,Object.prototype.hasOwnProperty.call(this.leaveCallbacks,t)&&this.leaveCallbacks[t].forEach(function(e){e(t)}),this.callbacks.forEach(function(a){a(e.name,t)}),Object.prototype.hasOwnProperty.call(this.enterCallbacks,e.name)&&this.enterCallbacks[e.name].forEach(function(t){t(e.name)}))},BreakpointChange.prototype.objectKeyArrayAdd=function(e,t,a){Object.prototype.hasOwnProperty.call(e,t)||(e[t]=[]);var n=e[t].indexOf(a);n==-1&&e[t].push(a)},BreakpointChange.prototype.objectKeyArrayRemove=function(e,t,a){if(Object.prototype.hasOwnProperty.call(e,t)){var n=e[t].indexOf(a);n!=-1&&e[t].splice(n,1)}};