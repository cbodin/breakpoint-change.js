/*! breakpoint-change.js v1.0.1 | https://github.com/cbodin/breakpoint-change.js#readme */
!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?module.exports=e():t.BreakpointChange=e()}(this,function(){"use strict";function t(t,e){var i=e||".breakpoint",n=i.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&");this.window=t,this.document=t.document,this.selectorRegex=new RegExp("^"+n+" (#|.)([a-z0-9-_]+)$","i"),this.onMediaChangeListener=this.matchMedia.bind(this),this.onInitTriggerListener=this.init.bind(this),this.addedReadyListener=!1,this.addedLoadListener=!1,this.callbacks=[],this.enterCallbacks={},this.leaveCallbacks={},this.breakpoints=[],this.defaultBreakpoint=void 0,this.currentBreakpoint=void 0}return t.prototype.on=function(t){this.objectKeyArrayAdd(this,"callbacks",t)},t.prototype.onEnter=function(t,e){this.objectKeyArrayAdd(this.enterCallbacks,t,e)},t.prototype.onLeave=function(t,e){this.objectKeyArrayAdd(this.leaveCallbacks,t,e)},t.prototype.off=function(t){this.objectKeyArrayRemove(this,"callbacks",t)},t.prototype.offEnter=function(t,e){this.objectKeyArrayRemove(this.enterCallbacks,t,e)},t.prototype.offLeave=function(t,e){this.objectKeyArrayRemove(this.leaveCallbacks,t,e)},t.prototype.init=function(){if(!this.setup()){var t=this.document.readyState;"loading"!=t||this.addedReadyListener?"interactive"!=t||this.addedLoadListener||(this.window.addEventListener("load",this.onInitTriggerListener),this.addedLoadListener=!0):(this.document.addEventListener("DOMContentLoaded",this.onInitTriggerListener),this.addedReadyListener=!0)}},t.prototype.getBreakpoint=function(){return this.currentBreakpoint},t.prototype.setup=function(){if(this.breakpoints.length>0)return!0;var t=this.getBreakpoints();return t.length>0&&(this.breakpoints=t,this.breakpoints.forEach(function(t){t.isDefault&&(this.defaultBreakpoint=t.name),t.mql.addListener(this.onMediaChangeListener)},this),this.matchMedia(),!0)},t.prototype.getBreakpoints=function(){for(var t=this.document.styleSheets,e=[],i=0;i<t.length;i++)for(var n=t[i].cssRules||[],a=0;a<n.length;a++){var o=n[a];if(4==o.type){var r=this.findBreakpoint(o.cssRules);if(r){var s=this.window.matchMedia(o.media.mediaText);e.push({name:r.name,mql:s,isDefault:r.isDefault})}}}return e},t.prototype.findBreakpoint=function(t){for(var e,i=t||[],n=0;n<i.length;n++)if(1==i[n].type){var a=i[n].selectorText.match(this.selectorRegex);a&&(e={isDefault:"#"==a[1],name:a[2]})}return e},t.prototype.matchMedia=function(){var t,e=this.currentBreakpoint||this.defaultBreakpoint;this.breakpoints.forEach(function(e){e.mql.matches&&(t=e)}),t&&t.name!=e&&(this.currentBreakpoint=t.name,Object.prototype.hasOwnProperty.call(this.leaveCallbacks,e)&&this.leaveCallbacks[e].forEach(function(t){t(e)}),this.callbacks.forEach(function(i){i(t.name,e)}),Object.prototype.hasOwnProperty.call(this.enterCallbacks,t.name)&&this.enterCallbacks[t.name].forEach(function(e){e(t.name)}))},t.prototype.objectKeyArrayAdd=function(t,e,i){Object.prototype.hasOwnProperty.call(t,e)||(t[e]=[]);var n=t[e].indexOf(i);n==-1&&t[e].push(i)},t.prototype.objectKeyArrayRemove=function(t,e,i){if(Object.prototype.hasOwnProperty.call(t,e)){var n=t[e].indexOf(i);n!=-1&&t[e].splice(n,1)}},t});