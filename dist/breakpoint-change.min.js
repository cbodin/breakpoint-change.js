/*! breakpoint-change.js v1.0.0 | https://github.com/cbodin/breakpoint-change.js#readme */
function BreakpointChange(t,e){var i=e||".breakpoint",n=i.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&");this.window=t,this.document=t.document,this.selectorRegex=new RegExp("^"+n+" (#|.)([a-z0-9-_]+)$","i"),this.onMediaChangeListener=this.matchMedia.bind(this),this.onInitTriggerListener=this.init.bind(this),this.addedReadyListener=!1,this.addedLoadListener=!1,this.callbacks=[],this.breakpoints=[],this.defaultBreakpoint=void 0,this.currentBreakpoint=void 0}BreakpointChange.prototype.on=function(t){var e=this.callbacks.indexOf(t);e==-1&&this.callbacks.push(t)},BreakpointChange.prototype.off=function(t){var e=this.callbacks.indexOf(t);e!=-1&&this.callbacks.splice(e,1)},BreakpointChange.prototype.init=function(){if(!this.setup()){var t=this.document.readyState;"loading"!=t||this.addedReadyListener?"interactive"!=t||this.addedLoadListener||(this.window.addEventListener("load",this.onInitTriggerListener),this.addedLoadListener=!0):(this.document.addEventListener("DOMContentLoaded",this.onInitTriggerListener),this.addedReadyListener=!0)}},BreakpointChange.prototype.getBreakpoint=function(){return this.currentBreakpoint},BreakpointChange.prototype.setup=function(){if(this.breakpoints.length>0)return!0;var t=this.getBreakpoints();return t.length>0&&(this.breakpoints=t,this.breakpoints.forEach(function(t){t.isDefault&&(this.defaultBreakpoint=t.name),t.mql.addListener(this.onMediaChangeListener)},this),this.matchMedia(),!0)},BreakpointChange.prototype.getBreakpoints=function(){for(var t=this.document.styleSheets,e=[],i=0;i<t.length;i++)for(var n=t[i].cssRules||[],a=0;a<n.length;a++){var r=n[a];if(4==r.type){var s=this.findBreakpoint(r.cssRules);if(s){var o=this.window.matchMedia(r.media.mediaText);e.push({name:s.name,mql:o,isDefault:s.isDefault})}}}return e},BreakpointChange.prototype.findBreakpoint=function(t){for(var e,i=t||[],n=0;n<i.length;n++)if(1==i[n].type){var a=i[n].selectorText.match(this.selectorRegex);a&&(e={isDefault:"#"==a[1],name:a[2]})}return e},BreakpointChange.prototype.matchMedia=function(){var t,e=this.currentBreakpoint||this.defaultBreakpoint;this.breakpoints.forEach(function(e){e.mql.matches&&(t=e)}),t&&t.name!=e&&(this.currentBreakpoint=t.name,this.callbacks.forEach(function(i){i(t.name,e)}))};